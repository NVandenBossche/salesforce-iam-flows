<div class="card-body">
    <button type="button" class="btn btn-info text-white" data-bs-toggle="collapse" data-bs-target="#<%= name %>Collapse">
        Show/Hide Details
    </button>

    <div id="<%= name %>Collapse" class="collapse card-body">
        <% if (config) { %>
            The application follows these steps.
            <ol class="smallFont">      
                <% if (config.calls) { %>
                    <% config.calls.forEach(call => { %> 
                        <% if (call.method == "GET") { %>
                            <!-- Show the first call to a Salesforce endpoint -->
                            <% if (call.input) { %>
                                <li>
                                    The user is redirected with an HTTP <%- call.method %> 
                                    to the Salesforce <%- call.endpoint_name %> Endpoint at 
                                        <code><%= baseURL %><%= call.endpoint_url %></code>
                                    with the following parameters:
                                    <ul>
                                        <% if (call.input.includes("response_type")) { %>
                                            <li>
                                                <code>response_type=<%- config.response_type %></code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("grant_type")) { %>
                                            <li>
                                                <code>grant_type=<%- config.grant_type %></code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("refresh_token")) { %>
                                            <li>
                                                <code>refresh_token=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_id")) { %>
                                            <li>
                                                <code>client_id=<%- clientId %></code> - should match the client ID in the 
                                                Connected App
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_secret")) { %>
                                            <li>
                                                <code>client_secret=<%- clientSecret %></code> - should match the client secret in the 
                                                Connected App
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("redirect_uri")) { %>
                                            <li>
                                                <code>redirect_uri=<%- callbackURL %></code> - should match the callback URL in the
                                                Connected App
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_assertion_type")) { %>
                                            <li>
                                                <code>client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_assertion")) { %>
                                            <li>
                                                <code>client_assertion=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("assertion_type")) { %>
                                            <li>
                                                <code>assertion_type=urn:oasis:names:tc:SAML:2.0:profiles:SSO:browser</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("assertion")) { %>
                                            <li>
                                                <code>assertion=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("scope")) { %>
                                            <li>
                                                <code>scope=<%- scope %> </code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("scope")) { %>
                                            <li>
                                                <code>scope=<%- scope %> </code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("code")) { %>
                                            <li>
                                                <code>code=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("code_challenge")) { %>
                                            <li>
                                                <code>code_challenge=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("state")) { %>
                                            <li>
                                                <code>state=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("nonce")) { %>
                                            <li>
                                                <code>nonce=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("username")) { %>
                                            <li>
                                                <code>username=&lt;<i>entered_by_user</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("password")) { %>
                                            <li>
                                                <code>password=&lt;<i>entered_by_user</i>&gt;</code>
                                            </li>
                                        <% } %>
                                    </ul>
                                </li> 
                            <% } %>

                            <!-- Interaction of user with the flow -->
                            <% if (call.user_authorization) { %>
                                <li>
                                    Salesforce requests the user to log in and authorize the Connected App for the selected OAuth 
                                    scopes. If the credentials are incorrect or the user declines the authorization, the flow
                                    fails. Otherwise it continues to the next step.
                                </li>
                            <% } %>

                            <!-- Validation on the authorization server -->
                            <% if (call.validation) { %>
                                <li>
                                    Salesforce validates the GET request. Successful validation results in a positive response
                                    and failed validation in a negative response to the callback URL. The following parameters
                                    are validated:
                                    <ul>
                                        <li>
                                            Authorization code
                                        </li>
                                        <li>
                                            Code verifier
                                        </li>
                                        <li>
                                            Client id
                                        </li>
                                        <li>
                                            Client secret
                                        </li>
                                        <li>
                                            Redirect uri - if it matches with the
                                            redirect_uri specified in the Connected App
                                        </li>
                                    </ul>
                                </li>
                            <% } %>

                            <!-- Show how the response is handled -->
                            <% if (call.output) { %>
                                <li>
                                    After successful authorization, Salesforce redirects to the callback URL. There are
                                    different parameters returned in the URL:
                                    <ul>
                                        <% if (call.output.includes("code")) { %>
                                            <li>
                                                <code>code=&lt;<i>returned_by_Salesforce</i>&gt;</code> - the authorization code.
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("token_type")) { %>
                                            <li>
                                                <code>token_type=<%- config.token_type %></code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("instance_url")) { %>
                                            <li>
                                                <code>instance_url=<%- baseURL %> </code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("access_token")) { %>
                                            <li>
                                                <code>access_token=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("refresh_token")) { %>
                                            <li>
                                                <code>refresh_token=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("id")) { %>
                                            <li>
                                                <code>id=&lt;<i>returned_by_Salesforce</i>&gt;</code> - the identity URL
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("id_token")) { %>
                                            <li>
                                                <code>id_token=&lt;<i>returned_by_Salesforce</i>&gt;</code> - JWT containing 
                                                information about the user
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("signature")) { %>
                                            <li>
                                                <code>signature=&lt;<i>returned_by_Salesforce</i>&gt;</code> - Signature of the ID token 
                                                (client_secret key applied to id<code>:</code>issued_at)
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("state")) { %>
                                            <li>
                                                <code>state=&lt;<i>returned_by_Salesforce</i>&gt;</code> - Same state as specified
                                                in the request.
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("scope")) { %>
                                            <li>
                                                <code>scope=&lt;<i>returned_by_Salesforce</i>&gt;</code> - Same scope as specified
                                                in the request, or all scopes from the Connected App if not specified.
                                            </li>
                                        <% } %>
                                    </ul>
                                </li>
                            <% } %>
                        <% } else if (call.method == "POST") { %>
                            <!-- Show the second call to a Salesforce endpoint -->
                            <% if (call.input) { %>
                                <li>
                                    The application server launches an HTTP POST request to the Salesforce
                                    <%- call.endpoint_name %> Endpoint at 
                                        <code>
                                            <%= baseURL %><%= call.endpoint_url %>
                                        </code>
                                    with the following parameters:
                                    <ul>
                                        <% if (call.input.includes("response_type")) { %>
                                            <li>
                                                <code>response_type=<%- config.response_type %></code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("grant_type")) { %>
                                            <li>
                                                <code>grant_type=<%- config.grant_type %></code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("refresh_token")) { %>
                                            <li>
                                                <code>refresh_token=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_id")) { %>
                                            <li>
                                                <code>client_id=<%- clientId %></code> - should match the client ID in the 
                                                Connected App
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_secret")) { %>
                                            <li>
                                                <code>client_secret=<%- clientSecret %></code> - should match the client secret in the 
                                                Connected App
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("redirect_uri")) { %>
                                            <li>
                                                <code>redirect_uri=<%- callbackURL %></code> - should match the callback URL in the
                                                Connected App
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_assertion_type")) { %>
                                            <li>
                                                <code>client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("client_assertion")) { %>
                                            <li>
                                                <code>client_assertion=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("assertion_type")) { %>
                                            <li>
                                                <code>assertion_type=urn:oasis:names:tc:SAML:2.0:profiles:SSO:browser</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("assertion")) { %>
                                            <li>
                                                <code>assertion=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("scope")) { %>
                                            <li>
                                                <code>scope=<%- scope %> </code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("scope")) { %>
                                            <li>
                                                <code>scope=<%- scope %> </code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("code")) { %>
                                            <li>
                                                <code>code=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("code_challenge")) { %>
                                            <li>
                                                <code>code_challenge=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("code_verifier")) { %>
                                            <li>
                                                <code>code_verifier=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("state")) { %>
                                            <li>
                                                <code>state=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("nonce")) { %>
                                            <li>
                                                <code>nonce=&lt;<i>generated_on_click</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("username")) { %>
                                            <li>
                                                <code>username=&lt;<i>entered_by_user</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.input.includes("password")) { %>
                                            <li>
                                                <code>password=&lt;<i>entered_by_user</i>&gt;</code>
                                            </li>
                                        <% } %>
                                    </ul>
                                </li> 
                            <% } %>

                            <!-- Interaction of user with the flow -->
                            <% if (call.validation) { %>
                                <li>
                                    Salesforce validates the POST request. Successful validation results in a positive response
                                    and failed validation in a negative response. The following parameters are validated:
                                    <ul>
                                        <li>
                                            Authorization code
                                        </li>
                                        <li>
                                            Code verifier
                                        </li>
                                        <li>
                                            Client id
                                        </li>
                                        <li>
                                            Client secret
                                        </li>
                                        <li>
                                            Redirect uri
                                        </li>
                                    </ul>
                                </li>
                            <% } %>
                                
                            <!-- Show how the response is handled -->
                            <% if (call.output) { %>
                                <li>
                                    After a successful validation, Salesforce returns a response to the HTTP POST message
                                    containing the following values:
                                    <ul>
                                        <% if (call.output.includes("code")) { %>
                                            <li>
                                                <code>code=&lt;<i>returned_by_Salesforce</i>&gt;</code> - the authorization code.
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("token_type")) { %>
                                            <li>
                                                <code>token_type=<%- config.token_type %></code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("instance_url")) { %>
                                            <li>
                                                <code>instance_url=<%- baseURL %> </code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("access_token")) { %>
                                            <li>
                                                <code>access_token=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("refresh_token")) { %>
                                            <li>
                                                <code>refresh_token=&lt;<i>returned_by_Salesforce</i>&gt;</code>
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("id")) { %>
                                            <li>
                                                <code>id=&lt;<i>returned_by_Salesforce</i>&gt;</code> - the identity URL
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("id_token")) { %>
                                            <li>
                                                <code>id_token=&lt;<i>returned_by_Salesforce</i>&gt;</code> - JWT containing 
                                                information about the user
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("signature")) { %>
                                            <li>
                                                <code>signature=&lt;<i>returned_by_Salesforce</i>&gt;</code> - Signature of the ID token 
                                                (client_secret key applied to id<code>:</code>issued_at)
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("state")) { %>
                                            <li>
                                                <code>state=&lt;<i>returned_by_Salesforce</i>&gt;</code> - Same state as specified
                                                in the request.
                                            </li>
                                        <% } %>
                                        <% if (call.output.includes("scope")) { %>
                                            <li>
                                                <code>scope=&lt;<i>returned_by_Salesforce</i>&gt;</code> - Same scope as specified
                                                in the request, or all scopes from the Connected App if not specified.
                                            </li>
                                        <% } %>
                                    </ul>
                                </li>
                            <% } %>
                        <% } %>
                    <% }); %>
                <% } %>

                <!-- Query step -->
                <% if (config.query) { %>
                    <li>
                        The <code>access_token</code> from the response is used to query the Salesforce APIs.
                    </li>
                <% } %>
            </ol>

                <!-- List the possible attack vectors -->
                <% if (config.attacks) { %>
                    There are a few important scenarios to keep in mind where malicious actors can be involved 
                    for this flow:
                    <ol class="smallFont">
                        <% if (config.attacks.includes("access_control")) { %>
                            <li>
                                A malicious app tries to access resources they are not allowed to. This is blocked by the
                                scope parameter of the Connected App. For example, even if the user has the permission to
                                post on chatter through its permissions, the malicious app will not be able to post on
                                chatter if the
                                <code>chatter_api</code> scope wasn't enabled for the Connected App.
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("csrf")) { %>
                            <li>
                                A malicious app tries to send a user-agent request on behalf of the actual app (Cross-Site
                                Request Forging or CSRF). This is blocked by the state parameter where the actual app sends
                                a unique identifier for every user-agent request. Only if the actual app sees the same state
                                being posted on the callback URL endpoint, it will know that the original request was
                                originated from its context.
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("browser_history")) { %>
                            <li>
                                Attackers could leverage the browser history to obtain the access token since it's
                                returned in plain text in the URL. This is avoided by adding the callback parameters
                                as part of the <a href="https://www.w3.org/DesignIssues/Fragment.html">fragment 
                                identifier</a>. This makes it impossible to retrieve the access token by using methods
                                such as <code>window.history()</code> in JavaScript.
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("embedded_browser")) { %>
                            <li>
                                A malicious, but seemingly harmless app is installed on your phone. It comes with an
                                embedded browser inside the app which is used to launch the User-Agent flow. However, the
                                embedded browser actually captures username and password while typing. This is something
                                very difficult to block and requires educating the user to not type credentials in an
                                embedded browser unless you really trust the app. It's better to work with a Web-Server flow
                                without client secret or assertion where a trusted mobile browser is used for launching the
                                auth flow (see lower).
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("standard_browser")) { %>
                            <li>
                                This flow authenticates the client based on the callback URL, just like User Agent 
                                flow. Unlike the User Agent flow, it leverages a mobile browser that is not embedded,
                                which provides additional security to the mobile app user because the mobile app
                                itself doesn't need to be trusted fully with credentials. 
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("impersonation_secret")) { %>
                            <li>
                                A malicious app pretends it's our server. This is blocked because only our server should
                                have access to the client secret. That's why it's so important that the client secret
                                can be well-guarded by the server.
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("impersonation_assertion")) { %>
                            <li>
                                A malicious app pretends it's our server. This is blocked because only our server should
                                have access to the private key that is used to sign the assertion. That's why it's so 
                                important that private keys are never shared with any system.
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("impersonation_assertion")) { %>
                            <li>
                                A malicious app tries to pretend to be the actual app. This is blocked by applying a
                                signature to the JWT claims that is based on a private key only known by the actual
                                app. The corresponding public certificate is uploaded in the connected app. 
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("auth_code_interception")) { %>
                            <li>
                                A malicious app intercepts the authorization code and tries to use it to get an access
                                token. This is blocked by using the code_challenge parameter in the authorization
                                request, which is then checked against the code_verifier parameter in the token request.
                                The code verifier is 128 bytes of random data with high entropy that's base64url
                                encoded. The code challenge is the base64url encoded SHA256 hash value of the code
                                verifier.
                            </li>
                        <% } %>
                        <% if (config.attacks.includes("refresh_token")) { %>
                            <li>
                                The refresh token has the same value as user credentials and should be securely stored. Proper precautions should be taken so that malicious actors cannot access this refresh token from e.g. a database. In case a refresh token is compromised, you can always expire it manually from the Salesforce setup menu. 
                            </li>
                        <% } %>
                    </ol>
                <% } %>

        <% } else { %>
            <p>No details available</p>
        <% } %>
    </div>
</div>
